module Clojure.DeSugar where

import Language.Haskell.Exts.Syntax as HS
import Clojure.Translate


--deSugar (Listcomp exp (q:qs)) =

--;;flatmap wants a curried version. need some fucking curry that really works (might just use clojure map)




--rule (a) page 132
deSugar (HS.Listcomp exp ((QualStmt (Generator gpat gexp)):qs)) = (App 
                                                                (Var (UnQual (Ident "flatmap")))
                                                                (Tuple [(Lambda (SrcLoc "" 0 0) gpat
                                                                                    (deSugar (Listcomp exp qs)))
                                                                       , 
                                                                        (deSugar qs)])
                                                                )

deSugar (Listcomp exp ((QualStmt (Qualifier exp)): qs)) = If (deSugar exp)
                                                          (deSugar (Listcomp exp qs))
                                                          (List [])

deSugar (Listcomp exp []) = (App (Var (Special Cons)) exp (List []))

                                                          


                                                                        

deSugar x = x
                                                                        
                                                                                                                                        
                                                                
                                                                
                                                                
                                                                    




    

