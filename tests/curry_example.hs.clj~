(defn add3[params]
  (let [ 
    b0  (match `x params)
        ]
    (cond 
(matches b0) (eval applyBinds b0(let [param gensym "l"] `(fn [~param] (let [binds (match yparams)]) ++  (matches b0 ) (eval (applyBinds b0 `(+ (+ x y) z))) 
 ))) 
 
     true (list :patternmatchfail add3 params) )))


